// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


//USER MODEL

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId //mapping ID object from mongodb
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashedPassword String? //optional for oAuth
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  conversationIds String[] @db.ObjectId //store ID of all conversations this user is a part of.
  conversations Conversation[] @relation(fields: [conversationIds], references: [id])

  seenMessageIds String[] @db.ObjectId
  seenMessages Message[] @relation("Seen", fields: [seenMessageIds], references: [id])

  accounts Account[]
  messages Message[]
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId //mapping ID object from mongodb
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_toke String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  
}

model Conversation {
  id String @id @default(auto()) @map("_id") @db.ObjectId //mapping ID object from mongodb
  createdAt DateTime @default(now())
  lastMessageAt DateTime @default(now())
  name String?
  isGroup Boolean?

  messagesIds String[] @db.ObjectId
  messages Message[]

  userIds String[] @db.ObjectId
  users User[] @relation(fields: [userIds], references: [id])
}